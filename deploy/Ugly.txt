<!DOCTYPE html>
<html>
<head>
    <title>CATS-Portfolio Release Tracking Board-0.1</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Thu Jun 07 2018 11:10:34 GMT-0600 (MDT) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Thu Jun 07 2018 11:10:34 GMT-0600 (MDT)";
        var ARTIFACT = "F529";
        var BUILDER  = "corkr03";
        var CHECKSUM = 4930664374;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,showLog:!1,logger:null,items:[{xtype:"container",itemId:"information"},{xtype:"container",itemId:"button_box"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(e){var t,o=305419896;for(e=(e=(e=e.replace(/var CHECKSUM = .*;/,"")).replace(/var BUILDER  = .*;/,"")).replace(/\s/g,""),t=0;t<e.length;t++)o+=e.charCodeAt(t)*t;return o},_checkChecksum:function(e){var o=Ext.create("Deft.Deferred"),a=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(e){if(text=e.responseText,CHECKSUM){var t=a._generateChecksum(text);if(CHECKSUM!==t)return void o.resolve(!1)}o.resolve(!0)}}),o.promise},_addToContainer:function(e){var t=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);e.add(t)},afterRender:function(){var e=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var t=this.down("#information");this._addToContainer(t)}this.showLog&&this.logger&&this.down("#button_box").add({xtype:"rallybutton",text:"Show Log",listeners:{scope:this,click:function(){this.logger.displayLog()}}}),e.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(e).then({scope:this,success:function(e){e||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(e){console.log("oops:",e)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,dock:"bottom"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var e=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);ARTIFACT&&(e=e+"<br/>Source artifact: "+ARTIFACT),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"top",html:e})}}}),Ext.define("CArABU.technicalservices.Logger",{saveForLater:!1,saveLines:100,logArray:[],constructor:function(e){Ext.apply(this,e)},setSaveForLater:function(e){this.saveForLater=e},log:function(e){var t="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",o=[];o=Ext.Array.push(o,[t]),o=Ext.Array.push(o,Ext.Array.slice(arguments,0)),this.saveForLater&&(this.logArray||(this.logArray=[]),this.logArray.push(o.join(" ")),this.logArray.length>this.saveLines&&this.logArray.shift()),window.console&&console.log.apply(console,o)},getLogText:function(){return this.logArray&&0!==this.logArray.length?this.logArray.join("<br/>"):"-- no log --"},displayLog:function(){var e=this.getLogText();this.popup=Ext.create("Rally.ui.dialog.Dialog",{width:Ext.getBody().getWidth()-20,height:Ext.getBody().getHeight()-20,closable:!0,title:"Log",autoShow:!0,layout:"border",defaults:{layout:"fit",width:"50%",border:!1},items:[{region:"center",xtype:"container",html:e,autoScroll:!0}]})}}),Ext.define("TSUtilities",{singleton:!0,loadWsapiRecords:function(e){var a=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",Ext.Object.merge({model:"Defect",fetch:["ObjectID"]},e)).load({callback:function(e,t,o){o?a.resolve(e):(console.error("Failed: ",t),a.reject("Problem loading: "+t.error.errors.join(". ")))}}),a.promise},loadAStoreWithAPromise:function(e,t){var a=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:e,fetch:t}).load({callback:function(e,t,o){o?a.resolve(this):(console.error("Failed: ",t),a.reject("Problem loading: "+t.error.errors.join(". ")))}}),a.promise}}),Ext.define("CArABU.technicalservices.ArtifactCardModelBuilder",{singleton:!0,build:function(e,o){var a=Ext.create("Deft.Deferred");return Rally.data.ModelFactory.getModel({type:e,success:function(e){var t=Ext.define(o,{extend:e,logger:new CArABU.technicalservices.Logger,fields:[{name:"__dateBucket",defaultValue:null},{name:"__positionX"},{name:"__positionY"},{name:"__predecessors"}],calculate:function(e,t){this.logger.log("update",this.get("FormattedID"),t);var o=this.get(t),a=null;_.each(e,function(e){if(console.log("iteration",e.StartDate,e.EndDate,o),e.StartDate<o&&e.EndDate>=o)return a=e.EndDate,!1}),console.log("update the model ",a),this.set("__dateBucket",a)}});a.resolve(t)}}),a}}),Ext.define("CArABU.technicalservices.portfolioreleasetracking.Board",{extend:"Rally.ui.cardboard.CardBoard",alias:"widget.portfolioreleasetrackingboard",config:{readOnly:!0,attribute:"__dateBucket",rowConfig:{field:"Project"},columnConfig:{columnHeaderConfig:{headerTpl:'<span class="iname">{Name}</span><tpl if="StartDate"><br/><span class="idates">{[Rally.util.DateTime.format(values.StartDate,"Y-m-d")]} - {[Rally.util.DateTime.format(values.EndDate,"Y-m-d")]}</span></tpl>'}},storeConfig:{fetch:["FormattedID","PlannedEndDate","Name"],listeners:{load:function(e,t){var o=this.iterations;console.log("load",o),_.each(t,function(e){e.calculate(o,"PlannedEndDate")})},scope:this}}},constructor:function(e){this.mergeConfig(e),this.callParent(arguments)},_retrieveModels:function(t){CArABU.technicalservices.ArtifactCardModelBuilder.build("PortfolioItem/Feature","Feature_extended").then({success:function(e){this.models=[e],this.onModelsRetrieved(t)},scope:this})}}),Ext.define("CArABU.technicalservices.app.PortfolioReleaseTrackingBoard",{extend:"Rally.app.App",componentCls:"app",logger:new CArABU.technicalservices.Logger,defaults:{margin:10},integrationHeaders:{name:"CArABU.technicalservices.app.TSPortfolioReleaseTrackingBoard"},launch:function(){if(this._validate()){var e=this.getContext().getTimeboxScope().getRecord();this._fetchIterations(e).then({success:this._buildBoard,failure:this._showErrorNotification,scope:this})}},_validate:function(){return this.getContext().getTimeboxScope()&&"release"==this.getContext().getTimeboxScope().getType()?!!this.getContext().getTimeboxScope().getRecord()||(this._addAppMessage("Please select a Release from the dashboard scope."),!1):(this._addAppMessage("This app is intended for a Release scoped dashboard.  Please use the Edit Page... menu item to set the dashboard for a Release filter."),!1)},_fetchIterations:function(e){var a=Ext.create("Deft.Deferred");return e?Ext.create("Rally.data.wsapi.Store",{model:"Iteration",fetch:["Name","StartDate","EndDate"],limit:"Infinity",filters:[{property:"StartDate",operator:"<",value:e.get("ReleaseDate")},{property:"EndDate",operator:">",value:e.get("ReleaseStartDate")}],sorters:[{property:"StartDate",direction:"ASC"}],context:{projectScopeDown:!1,projectScopeUp:!1}}).load({scope:this,callback:function(e,t,o){o&&0<e.length?a.resolve(_.map(e,function(e){return e.getData()})):o?a.reject("No iterations found for the selected Release in the currently scoped project."):a.reject("Error loading Iterations: "+t.error.errors.join("<br/>"))}}):a.reject("No Release selected."),a.promise},_showErrorNotification:function(e){Rally.ui.notify.Notifier.showError({message:e,allowHTML:!0})},_addAppMessage:function(e){this.removeAll(),this.add({xtype:"container",html:Ext.String.format('<div class="no-data-container"><div class="secondary-message">{0}</div></div>',e)})},_buildBoard:function(o){this.logger.log("_buildBoard",o);var e=this._getColumns(o);this.add({xtype:"portfolioreleasetrackingboard",types:["PortfolioItem/Feature"],context:this.getContext(),columns:e,iterations:o,storeConfig:{fetch:["FormattedID","PlannedEndDate","Name"],listeners:{load:function(e,t){_.each(t,function(e){e.calculate(o,"PlannedEndDate")})},scope:this}}})},_getColumns:function(e){var a=[];return _.each(e,function(e){var t=e.EndDate||e.get("EndDate"),o=e.StartDate||e.get("StartDate");a.push({value:t,additionalFetchFields:["PlannedEndDate"],columnHeaderConfig:{headerData:e},getStoreFilter:function(e){return[{property:"PlannedEndDate",operator:"<=",value:t},{property:"PlannedEndDate",operator:">",value:o}]}})}),a.push({value:null,columnHeaderConfig:{headerData:{Name:"Unscheduled"}},additionalFetchFields:["PlannedEndDate"],getStoreFilter:function(e){return{property:"PlannedEndDate",operator:"=",value:null}}}),a},getSettingsFields:function(){return[{name:"saveLog",xtype:"rallycheckboxfield",boxLabelAlign:"after",fieldLabel:"",margin:"5 0 5 0",boxLabel:'Save Logging<br/><span style="color:#999999;"><i>Save last 100 lines of log for debugging.</i></span>'}]},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{showLog:this.getSetting("saveLog"),logger:this.logger})},isExternal:function(){return void 0===this.getAppId()}});

               Rally.launchApp('CArABU.technicalservices.app.PortfolioReleaseTrackingBoard', {
                   name: 'Portfolio Release Tracking Board'
               });
        });
    </script>

    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}

.idates {
  font-size: 11px;
  font-style: normal;
  color: #666;
  padding-top: 4px;
  font-family: NotoSans;
  display: block;

}

    </style>

</head>
<body></body>
</html>